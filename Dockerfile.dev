# Etapa final para produção
FROM node:22-alpine

WORKDIR /app

# Copie os arquivos necessários para instalar as dependências
COPY package*.json ./

# Instale dependências
RUN npm ci --quiet

# Copie o código fonte para a imagem
COPY . .

# Instale dependências do sistema (incluindo Tesseract OCR e ferramentas de build)
RUN apk add --no-cache \
    graphicsmagick \
    ghostscript \
    openssl \
    tesseract-ocr \
    tesseract-ocr-data-por \
    python3 \
    py3-pip \
    py3-opencv \
    wget \
    cmake \
    make \
    gcc \
    g++ \
    musl-dev

# Criar pasta do tessdata (caso não exista)
RUN mkdir -p /usr/share/tessdata

# # Baixar manualmente o idioma Português
# RUN wget -O /usr/share/tessdata/por.traineddata \
#     https://github.com/tesseract-ocr/tessdata/raw/main/por.traineddata

RUN wget -O /usr/share/tessdata/Latin.traineddata \
    https://github.com/tesseract-ocr/tessdata/raw/main/script/Latin.traineddata

# Criar ambiente virtual Python e ativá-lo
RUN python3 -m venv /app/venv
ENV PATH="/app/venv/bin:$PATH"

# Instalar pytesseract no ambiente virtual
RUN pip install --no-cache-dir pytesseract

RUN mkdir -p /app/uploads

RUN npx prisma generate
# Comando de inicialização
CMD [ "npm", "run", "start:dev" ]
